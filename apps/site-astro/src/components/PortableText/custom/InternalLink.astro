---
import type { Mark, Props as $ } from "astro-portabletext/types";
import type { InternalLinkAnnotation } from "content-models";
import { getUrlForSanityType } from "@/lib/url";

export type Props = $<Mark<InternalLinkAnnotation>>;

const {
  node: { markDef },
} = Astro.props;

// Resource content will not have its own page
// grab the resource content's parent resource data instead
function getInternalLinkUrl(mark: InternalLinkAnnotation) {
  const internalLinkObj =
    mark.internalLink._type === "resourceContent"
      ? mark.internalLink.resource
      : mark.internalLink;

  return getUrlForSanityType(
    internalLinkObj._type,
    internalLinkObj.slug.current
  );
}

const url = new URL(getInternalLinkUrl(markDef), Astro.url);
---

{
  markDef.showPopover && (
    <button data-popover-id="lieuu44uxonkamz">
      <span>Popover TODO</span>

      <div
        id="lieuu44uxonkamz"
        class="pt-popover bg-gray-50 border-2 border-gray-200 rounded-md drop-shadow-lg p-4"
        style="display: none"
      >
        <div class="flex flex-col gap-2 justify-between mt-6 leading-snug">
          <a
            href="/concepts/polyamory"
            class="pt-popover-content-link inline-block internal-link decoration-t-magenta-500"
          >
            Polyamory
          </a>
        </div>
        <>
          <p class="text-md">
            The expansion of romantic relationships beyond two people with the
            consent and knowledge of all parties involved.
          </p>
          <div class="pt-popover-arrow" />
        </>
      </div>
    </button>
  )
}
{
  !markDef.showPopover && (
    <a href={url} title={markDef.internalLink.title}>
      <slot />
    </a>
  )
}
